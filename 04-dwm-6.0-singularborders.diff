--- dwm.c.orig	2013-08-08 22:45:06.646717451 -0400
+++ dwm.c	2013-08-08 23:52:02.733655823 -0400
@@ -452,13 +452,16 @@ bstack(Monitor *m) {
 	for(i = mx = tx = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
 		if(i < m->nmasters[m->curtag]) {
 			w = (m->ww - mx) / (MIN(n, m->nmasters[m->curtag]) - i);
-			resize(c, m->wx + mx, m->wy, w - (2 * c->bw), mh - (2 * c->bw), False);
-			mx += WIDTH(c);
+			if(n == 1)
+				resize(c, m->wx - c->bw, m->wy, m->ww, m->wh, False);
+			else
+				resize(c, m->wx + mx - c->bw, m->wy, w, mh - c->bw, False);
+			mx += WIDTH(c) - c->bw;
 		}
 		else {
 			w = (m->ww - tx) / (n - i);
-			resize(c, m->wx + tx, m->wy + mh, w - (2 * c->bw), m->wh - mh - (2 * c->bw), False);
-			tx += WIDTH(c);
+			resize(c, m->wx + tx - c->bw, m->wy + mh, w, m->wh - mh - c->bw, False);
+			tx += WIDTH(c) - c->bw;
 		}
 }
 
@@ -919,6 +922,8 @@ expose(XEvent *e) {
 
 void
 focus(Client *c) {
+	XWindowChanges wc;
+
 	if(!c || !ISVISIBLE(c))
 		for(c = selmon->stack; c && !ISVISIBLE(c); c = c->snext);
 	/* was if(selmon->sel) */
@@ -933,6 +938,11 @@ focus(Client *c) {
 		attachstack(c);
 		grabbuttons(c, True);
 		XSetWindowBorder(dpy, c->win, dc.colors[1][ColBorder].pixel);
+		if(!c->isfloating) {
+			wc.sibling = selmon->barwin;
+			wc.stack_mode = Below;
+			XConfigureWindow(dpy, c->win, CWSibling | CWStackMode, &wc);
+		}
 		setfocus(c);
 	}
 	else
@@ -1253,7 +1263,7 @@ monocle(Monitor *m) {
 	if(n > 0) /* override layout symbol */
 		snprintf(m->ltsymbol, sizeof m->ltsymbol, "[%d]", n);
 	for(c = nexttiled(m->clients); c; c = nexttiled(c->next))
-		resize(c, m->wx, m->wy, m->ww - 2 * c->bw, m->wh - 2 * c->bw, False);
+		resize(c, m->wx - c->bw, m->wy, m->ww, m->wh, False);
 }
 
 void
@@ -1779,13 +1789,16 @@ tile(Monitor *m) {
 	for(i = my = ty = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
 		if(i < m->nmasters[m->curtag]) {
 			h = (m->wh - my) / (MIN(n, m->nmasters[m->curtag]) - i);
-			resize(c, m->wx, m->wy + my, mw - (2*c->bw), h - (2*c->bw), False);
-			my += HEIGHT(c);
+			if(n == 1)
+				resize(c, m->wx - c->bw, m->wy, m->ww, m->wh, False);
+			else
+				resize(c, m->wx - c->bw, m->wy + my, mw - c->bw, h - c->bw, False);
+			my += HEIGHT(c) - c->bw;
 		}
 		else {
 			h = (m->wh - ty) / (n - i);
-			resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), False);
-			ty += HEIGHT(c);
+			resize(c, m->wx + mw - c->bw, m->wy + ty, m->ww - mw, h - c->bw, False);
+			ty += HEIGHT(c) - c->bw;
 		}
 }
 
